// coverage:ignore-file
// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.80.1.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;

part 'bridge_definitions.freezed.dart';

abstract class Native {
  Future<void> setupLogger({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSetupLoggerConstMeta;

  Stream<Progress> downloadVanilla({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kDownloadVanillaConstMeta;

  Stream<Progress> launchVanilla({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kLaunchVanillaConstMeta;

  Stream<Progress> launchForge({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kLaunchForgeConstMeta;

  Stream<Progress> launchQuilt({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kLaunchQuiltConstMeta;

  Future<DownloadState> fetchState({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kFetchStateConstMeta;

  Future<void> writeState({required DownloadState s, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kWriteStateConstMeta;

  Value getUiLayoutConfig({required Key key, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kGetUiLayoutConfigConstMeta;

  Future<void> setUiLayoutConfig({required Value value, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSetUiLayoutConfigConstMeta;
}

enum DownloadState {
  Downloading,
  Paused,
  Stopped,
}

enum Key {
  CompletedSetup,
}

class Progress {
  final double speed;
  final double percentages;
  final double currentSize;
  final double totalSize;

  const Progress({
    required this.speed,
    required this.percentages,
    required this.currentSize,
    required this.totalSize,
  });
}

@freezed
sealed class Value with _$Value {
  const factory Value.completedSetup(
    bool field0,
  ) = Value_CompletedSetup;
}
