// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.2.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables

import 'api.dart';
import 'api/authentication/account.dart';
import 'api/authentication/msa_flow.dart';
import 'api/collection.dart';
import 'api/download.dart';
import 'api/storage/account_storage.dart';
import 'api/storage/ui_layout.dart';
import 'api/vanilla/version.dart';
import 'dart:async';
import 'dart:convert';
import 'dart:ffi' as ffi;
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_io.dart';
import 'package:uuid/uuid.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_DownloadProgressPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockcrateapiDownloadProgressPtr;

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  DownloadProgress
      dco_decode_Auto_Ref_RustOpaque_stdsyncRwLockcrateapiDownloadProgress(
          dynamic raw);

  @protected
  DateTime dco_decode_Chrono_Utc(dynamic raw);

  @protected
  DownloadProgress dco_decode_RustOpaque_stdsyncRwLockcrateapiDownloadProgress(
      dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  UuidValue dco_decode_Uuid(dynamic raw);

  @protected
  AccountStorageKey dco_decode_account_storage_key(dynamic raw);

  @protected
  AccountStorageValue dco_decode_account_storage_value(dynamic raw);

  @protected
  AccountToken dco_decode_account_token(dynamic raw);

  @protected
  AdvancedOptions dco_decode_advanced_options(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  AdvancedOptions dco_decode_box_autoadd_advanced_options(dynamic raw);

  @protected
  LoginFlowDeviceCode dco_decode_box_autoadd_login_flow_device_code(
      dynamic raw);

  @protected
  LoginFlowErrors dco_decode_box_autoadd_login_flow_errors(dynamic raw);

  @protected
  MinecraftAccount dco_decode_box_autoadd_minecraft_account(dynamic raw);

  @protected
  MinecraftSkin dco_decode_box_autoadd_minecraft_skin(dynamic raw);

  @protected
  ModLoader dco_decode_box_autoadd_mod_loader(dynamic raw);

  @protected
  UILayoutValue dco_decode_box_autoadd_ui_layout_value(dynamic raw);

  @protected
  int dco_decode_box_autoadd_usize(dynamic raw);

  @protected
  VersionMetadata dco_decode_box_autoadd_version_metadata(dynamic raw);

  @protected
  CollectionId dco_decode_collection_id(dynamic raw);

  @protected
  double dco_decode_f_64(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  int dco_decode_i_64(dynamic raw);

  @protected
  List<MinecraftAccount> dco_decode_list_minecraft_account(dynamic raw);

  @protected
  List<MinecraftCape> dco_decode_list_minecraft_cape(dynamic raw);

  @protected
  List<MinecraftSkin> dco_decode_list_minecraft_skin(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8(dynamic raw);

  @protected
  List<(CollectionId, Progress)> dco_decode_list_record_collection_id_progress(
      dynamic raw);

  @protected
  LoginFlowDeviceCode dco_decode_login_flow_device_code(dynamic raw);

  @protected
  LoginFlowErrors dco_decode_login_flow_errors(dynamic raw);

  @protected
  LoginFlowEvent dco_decode_login_flow_event(dynamic raw);

  @protected
  LoginFlowStage dco_decode_login_flow_stage(dynamic raw);

  @protected
  MinecraftAccount dco_decode_minecraft_account(dynamic raw);

  @protected
  MinecraftCape dco_decode_minecraft_cape(dynamic raw);

  @protected
  MinecraftSkin dco_decode_minecraft_skin(dynamic raw);

  @protected
  MinecraftSkinVariant dco_decode_minecraft_skin_variant(dynamic raw);

  @protected
  ModLoader dco_decode_mod_loader(dynamic raw);

  @protected
  ModLoaderType dco_decode_mod_loader_type(dynamic raw);

  @protected
  UuidValue? dco_decode_opt_Uuid(dynamic raw);

  @protected
  AdvancedOptions? dco_decode_opt_box_autoadd_advanced_options(dynamic raw);

  @protected
  ModLoader? dco_decode_opt_box_autoadd_mod_loader(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_usize(dynamic raw);

  @protected
  Progress dco_decode_progress(dynamic raw);

  @protected
  (CollectionId, Progress) dco_decode_record_collection_id_progress(
      dynamic raw);

  @protected
  int dco_decode_u_32(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  UILayoutKey dco_decode_ui_layout_key(dynamic raw);

  @protected
  UILayoutValue dco_decode_ui_layout_value(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  int dco_decode_usize(dynamic raw);

  @protected
  VersionMetadata dco_decode_version_metadata(dynamic raw);

  @protected
  VersionType dco_decode_version_type(dynamic raw);

  @protected
  XstsTokenErrorType dco_decode_xsts_token_error_type(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  DownloadProgress
      sse_decode_Auto_Ref_RustOpaque_stdsyncRwLockcrateapiDownloadProgress(
          SseDeserializer deserializer);

  @protected
  DateTime sse_decode_Chrono_Utc(SseDeserializer deserializer);

  @protected
  DownloadProgress sse_decode_RustOpaque_stdsyncRwLockcrateapiDownloadProgress(
      SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  UuidValue sse_decode_Uuid(SseDeserializer deserializer);

  @protected
  AccountStorageKey sse_decode_account_storage_key(
      SseDeserializer deserializer);

  @protected
  AccountStorageValue sse_decode_account_storage_value(
      SseDeserializer deserializer);

  @protected
  AccountToken sse_decode_account_token(SseDeserializer deserializer);

  @protected
  AdvancedOptions sse_decode_advanced_options(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  AdvancedOptions sse_decode_box_autoadd_advanced_options(
      SseDeserializer deserializer);

  @protected
  LoginFlowDeviceCode sse_decode_box_autoadd_login_flow_device_code(
      SseDeserializer deserializer);

  @protected
  LoginFlowErrors sse_decode_box_autoadd_login_flow_errors(
      SseDeserializer deserializer);

  @protected
  MinecraftAccount sse_decode_box_autoadd_minecraft_account(
      SseDeserializer deserializer);

  @protected
  MinecraftSkin sse_decode_box_autoadd_minecraft_skin(
      SseDeserializer deserializer);

  @protected
  ModLoader sse_decode_box_autoadd_mod_loader(SseDeserializer deserializer);

  @protected
  UILayoutValue sse_decode_box_autoadd_ui_layout_value(
      SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_usize(SseDeserializer deserializer);

  @protected
  VersionMetadata sse_decode_box_autoadd_version_metadata(
      SseDeserializer deserializer);

  @protected
  CollectionId sse_decode_collection_id(SseDeserializer deserializer);

  @protected
  double sse_decode_f_64(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  int sse_decode_i_64(SseDeserializer deserializer);

  @protected
  List<MinecraftAccount> sse_decode_list_minecraft_account(
      SseDeserializer deserializer);

  @protected
  List<MinecraftCape> sse_decode_list_minecraft_cape(
      SseDeserializer deserializer);

  @protected
  List<MinecraftSkin> sse_decode_list_minecraft_skin(
      SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8(SseDeserializer deserializer);

  @protected
  List<(CollectionId, Progress)> sse_decode_list_record_collection_id_progress(
      SseDeserializer deserializer);

  @protected
  LoginFlowDeviceCode sse_decode_login_flow_device_code(
      SseDeserializer deserializer);

  @protected
  LoginFlowErrors sse_decode_login_flow_errors(SseDeserializer deserializer);

  @protected
  LoginFlowEvent sse_decode_login_flow_event(SseDeserializer deserializer);

  @protected
  LoginFlowStage sse_decode_login_flow_stage(SseDeserializer deserializer);

  @protected
  MinecraftAccount sse_decode_minecraft_account(SseDeserializer deserializer);

  @protected
  MinecraftCape sse_decode_minecraft_cape(SseDeserializer deserializer);

  @protected
  MinecraftSkin sse_decode_minecraft_skin(SseDeserializer deserializer);

  @protected
  MinecraftSkinVariant sse_decode_minecraft_skin_variant(
      SseDeserializer deserializer);

  @protected
  ModLoader sse_decode_mod_loader(SseDeserializer deserializer);

  @protected
  ModLoaderType sse_decode_mod_loader_type(SseDeserializer deserializer);

  @protected
  UuidValue? sse_decode_opt_Uuid(SseDeserializer deserializer);

  @protected
  AdvancedOptions? sse_decode_opt_box_autoadd_advanced_options(
      SseDeserializer deserializer);

  @protected
  ModLoader? sse_decode_opt_box_autoadd_mod_loader(
      SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_usize(SseDeserializer deserializer);

  @protected
  Progress sse_decode_progress(SseDeserializer deserializer);

  @protected
  (CollectionId, Progress) sse_decode_record_collection_id_progress(
      SseDeserializer deserializer);

  @protected
  int sse_decode_u_32(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  UILayoutKey sse_decode_ui_layout_key(SseDeserializer deserializer);

  @protected
  UILayoutValue sse_decode_ui_layout_value(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  int sse_decode_usize(SseDeserializer deserializer);

  @protected
  VersionMetadata sse_decode_version_metadata(SseDeserializer deserializer);

  @protected
  VersionType sse_decode_version_type(SseDeserializer deserializer);

  @protected
  XstsTokenErrorType sse_decode_xsts_token_error_type(
      SseDeserializer deserializer);

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8> cst_encode_AnyhowException(
      AnyhowException raw) {
    throw UnimplementedError();
  }

  @protected
  int cst_encode_Chrono_Utc(DateTime raw) {
    return cst_encode_i_64(raw.microsecondsSinceEpoch);
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8> cst_encode_String(String raw) {
    return cst_encode_list_prim_u_8(utf8.encoder.convert(raw));
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8> cst_encode_Uuid(UuidValue raw) {
    return cst_encode_list_prim_u_8(raw.toBytes());
  }

  @protected
  ffi.Pointer<wire_cst_advanced_options>
      cst_encode_box_autoadd_advanced_options(AdvancedOptions raw) {
    final ptr = wire.cst_new_box_autoadd_advanced_options();
    cst_api_fill_to_wire_advanced_options(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_login_flow_device_code>
      cst_encode_box_autoadd_login_flow_device_code(LoginFlowDeviceCode raw) {
    final ptr = wire.cst_new_box_autoadd_login_flow_device_code();
    cst_api_fill_to_wire_login_flow_device_code(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_login_flow_errors>
      cst_encode_box_autoadd_login_flow_errors(LoginFlowErrors raw) {
    final ptr = wire.cst_new_box_autoadd_login_flow_errors();
    cst_api_fill_to_wire_login_flow_errors(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_minecraft_account>
      cst_encode_box_autoadd_minecraft_account(MinecraftAccount raw) {
    final ptr = wire.cst_new_box_autoadd_minecraft_account();
    cst_api_fill_to_wire_minecraft_account(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_minecraft_skin> cst_encode_box_autoadd_minecraft_skin(
      MinecraftSkin raw) {
    final ptr = wire.cst_new_box_autoadd_minecraft_skin();
    cst_api_fill_to_wire_minecraft_skin(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_mod_loader> cst_encode_box_autoadd_mod_loader(
      ModLoader raw) {
    final ptr = wire.cst_new_box_autoadd_mod_loader();
    cst_api_fill_to_wire_mod_loader(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_ui_layout_value> cst_encode_box_autoadd_ui_layout_value(
      UILayoutValue raw) {
    final ptr = wire.cst_new_box_autoadd_ui_layout_value();
    cst_api_fill_to_wire_ui_layout_value(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.UintPtr> cst_encode_box_autoadd_usize(int raw) {
    return wire.cst_new_box_autoadd_usize(cst_encode_usize(raw));
  }

  @protected
  ffi.Pointer<wire_cst_version_metadata>
      cst_encode_box_autoadd_version_metadata(VersionMetadata raw) {
    final ptr = wire.cst_new_box_autoadd_version_metadata();
    cst_api_fill_to_wire_version_metadata(raw, ptr.ref);
    return ptr;
  }

  @protected
  int cst_encode_i_64(int raw) {
    return raw.toInt();
  }

  @protected
  ffi.Pointer<wire_cst_list_minecraft_account>
      cst_encode_list_minecraft_account(List<MinecraftAccount> raw) {
    final ans = wire.cst_new_list_minecraft_account(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_minecraft_account(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_minecraft_cape> cst_encode_list_minecraft_cape(
      List<MinecraftCape> raw) {
    final ans = wire.cst_new_list_minecraft_cape(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_minecraft_cape(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_minecraft_skin> cst_encode_list_minecraft_skin(
      List<MinecraftSkin> raw) {
    final ans = wire.cst_new_list_minecraft_skin(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_minecraft_skin(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8> cst_encode_list_prim_u_8(Uint8List raw) {
    final ans = wire.cst_new_list_prim_u_8(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_collection_id_progress>
      cst_encode_list_record_collection_id_progress(
          List<(CollectionId, Progress)> raw) {
    final ans = wire.cst_new_list_record_collection_id_progress(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_collection_id_progress(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8> cst_encode_opt_Uuid(UuidValue? raw) {
    return raw == null ? ffi.nullptr : cst_encode_Uuid(raw);
  }

  @protected
  ffi.Pointer<wire_cst_advanced_options>
      cst_encode_opt_box_autoadd_advanced_options(AdvancedOptions? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_advanced_options(raw);
  }

  @protected
  ffi.Pointer<wire_cst_mod_loader> cst_encode_opt_box_autoadd_mod_loader(
      ModLoader? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_mod_loader(raw);
  }

  @protected
  ffi.Pointer<ffi.UintPtr> cst_encode_opt_box_autoadd_usize(int? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_usize(raw);
  }

  @protected
  void cst_api_fill_to_wire_account_storage_value(
      AccountStorageValue apiObj, wire_cst_account_storage_value wireObj) {
    if (apiObj is AccountStorageValue_Accounts) {
      var pre_field0 = cst_encode_list_minecraft_account(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind = wire.cst_inflate_AccountStorageValue_Accounts();
      wireObj.kind.ref.Accounts.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is AccountStorageValue_MainAccount) {
      var pre_field0 = cst_encode_opt_Uuid(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind = wire.cst_inflate_AccountStorageValue_MainAccount();
      wireObj.kind.ref.MainAccount.ref.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_account_token(
      AccountToken apiObj, wire_cst_account_token wireObj) {
    wireObj.token = cst_encode_String(apiObj.token);
    wireObj.expires_at = cst_encode_i_64(apiObj.expiresAt);
  }

  @protected
  void cst_api_fill_to_wire_advanced_options(
      AdvancedOptions apiObj, wire_cst_advanced_options wireObj) {
    wireObj.jvm_max_memory =
        cst_encode_opt_box_autoadd_usize(apiObj.jvmMaxMemory);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_advanced_options(
      AdvancedOptions apiObj, ffi.Pointer<wire_cst_advanced_options> wireObj) {
    cst_api_fill_to_wire_advanced_options(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_login_flow_device_code(
      LoginFlowDeviceCode apiObj,
      ffi.Pointer<wire_cst_login_flow_device_code> wireObj) {
    cst_api_fill_to_wire_login_flow_device_code(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_login_flow_errors(
      LoginFlowErrors apiObj, ffi.Pointer<wire_cst_login_flow_errors> wireObj) {
    cst_api_fill_to_wire_login_flow_errors(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_minecraft_account(
      MinecraftAccount apiObj,
      ffi.Pointer<wire_cst_minecraft_account> wireObj) {
    cst_api_fill_to_wire_minecraft_account(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_minecraft_skin(
      MinecraftSkin apiObj, ffi.Pointer<wire_cst_minecraft_skin> wireObj) {
    cst_api_fill_to_wire_minecraft_skin(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_mod_loader(
      ModLoader apiObj, ffi.Pointer<wire_cst_mod_loader> wireObj) {
    cst_api_fill_to_wire_mod_loader(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_ui_layout_value(
      UILayoutValue apiObj, ffi.Pointer<wire_cst_ui_layout_value> wireObj) {
    cst_api_fill_to_wire_ui_layout_value(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_version_metadata(
      VersionMetadata apiObj, ffi.Pointer<wire_cst_version_metadata> wireObj) {
    cst_api_fill_to_wire_version_metadata(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_collection_id(
      CollectionId apiObj, wire_cst_collection_id wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_login_flow_device_code(
      LoginFlowDeviceCode apiObj, wire_cst_login_flow_device_code wireObj) {
    wireObj.verification_uri = cst_encode_String(apiObj.verificationUri);
    wireObj.user_code = cst_encode_String(apiObj.userCode);
  }

  @protected
  void cst_api_fill_to_wire_login_flow_errors(
      LoginFlowErrors apiObj, wire_cst_login_flow_errors wireObj) {
    if (apiObj is LoginFlowErrors_XstsError) {
      var pre_field0 = cst_encode_xsts_token_error_type(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind = wire.cst_inflate_LoginFlowErrors_XstsError();
      wireObj.kind.ref.XstsError.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is LoginFlowErrors_GameNotOwned) {
      wireObj.tag = 1;
      return;
    }
    if (apiObj is LoginFlowErrors_UnknownError) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind = wire.cst_inflate_LoginFlowErrors_UnknownError();
      wireObj.kind.ref.UnknownError.ref.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_login_flow_event(
      LoginFlowEvent apiObj, wire_cst_login_flow_event wireObj) {
    if (apiObj is LoginFlowEvent_Stage) {
      var pre_field0 = cst_encode_login_flow_stage(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind = wire.cst_inflate_LoginFlowEvent_Stage();
      wireObj.kind.ref.Stage.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is LoginFlowEvent_DeviceCode) {
      var pre_field0 =
          cst_encode_box_autoadd_login_flow_device_code(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind = wire.cst_inflate_LoginFlowEvent_DeviceCode();
      wireObj.kind.ref.DeviceCode.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is LoginFlowEvent_Error) {
      var pre_field0 = cst_encode_box_autoadd_login_flow_errors(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind = wire.cst_inflate_LoginFlowEvent_Error();
      wireObj.kind.ref.Error.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is LoginFlowEvent_Success) {
      var pre_field0 = cst_encode_box_autoadd_minecraft_account(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind = wire.cst_inflate_LoginFlowEvent_Success();
      wireObj.kind.ref.Success.ref.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_minecraft_account(
      MinecraftAccount apiObj, wire_cst_minecraft_account wireObj) {
    wireObj.username = cst_encode_String(apiObj.username);
    wireObj.uuid = cst_encode_Uuid(apiObj.uuid);
    cst_api_fill_to_wire_account_token(
        apiObj.accessToken, wireObj.access_token);
    cst_api_fill_to_wire_account_token(
        apiObj.refreshToken, wireObj.refresh_token);
    wireObj.skins = cst_encode_list_minecraft_skin(apiObj.skins);
    wireObj.capes = cst_encode_list_minecraft_cape(apiObj.capes);
  }

  @protected
  void cst_api_fill_to_wire_minecraft_cape(
      MinecraftCape apiObj, wire_cst_minecraft_cape wireObj) {
    wireObj.id = cst_encode_Uuid(apiObj.id);
    wireObj.state = cst_encode_String(apiObj.state);
    wireObj.url = cst_encode_String(apiObj.url);
    wireObj.alias = cst_encode_String(apiObj.alias);
  }

  @protected
  void cst_api_fill_to_wire_minecraft_skin(
      MinecraftSkin apiObj, wire_cst_minecraft_skin wireObj) {
    wireObj.id = cst_encode_Uuid(apiObj.id);
    wireObj.state = cst_encode_String(apiObj.state);
    wireObj.url = cst_encode_String(apiObj.url);
    wireObj.variant = cst_encode_minecraft_skin_variant(apiObj.variant);
  }

  @protected
  void cst_api_fill_to_wire_mod_loader(
      ModLoader apiObj, wire_cst_mod_loader wireObj) {
    wireObj.mod_loader_type = cst_encode_mod_loader_type(apiObj.modLoaderType);
    wireObj.version = cst_encode_String(apiObj.version);
  }

  @protected
  void cst_api_fill_to_wire_progress(
      Progress apiObj, wire_cst_progress wireObj) {
    wireObj.speed = cst_encode_f_64(apiObj.speed);
    wireObj.percentages = cst_encode_f_64(apiObj.percentages);
    wireObj.current_size = cst_encode_f_64(apiObj.currentSize);
    wireObj.total_size = cst_encode_f_64(apiObj.totalSize);
  }

  @protected
  void cst_api_fill_to_wire_record_collection_id_progress(
      (CollectionId, Progress) apiObj,
      wire_cst_record_collection_id_progress wireObj) {
    cst_api_fill_to_wire_collection_id(apiObj.$1, wireObj.field0);
    cst_api_fill_to_wire_progress(apiObj.$2, wireObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_ui_layout_value(
      UILayoutValue apiObj, wire_cst_ui_layout_value wireObj) {
    if (apiObj is UILayoutValue_CompletedSetup) {
      var pre_field0 = cst_encode_bool(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind = wire.cst_inflate_UILayoutValue_CompletedSetup();
      wireObj.kind.ref.CompletedSetup.ref.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_version_metadata(
      VersionMetadata apiObj, wire_cst_version_metadata wireObj) {
    wireObj.id = cst_encode_String(apiObj.id);
    wireObj.version_type = cst_encode_version_type(apiObj.versionType);
    wireObj.url = cst_encode_String(apiObj.url);
    wireObj.uploaded_time = cst_encode_Chrono_Utc(apiObj.uploadedTime);
    wireObj.release_time = cst_encode_Chrono_Utc(apiObj.releaseTime);
    wireObj.sha1 = cst_encode_String(apiObj.sha1);
    wireObj.compliance_level = cst_encode_u_32(apiObj.complianceLevel);
  }

  @protected
  PlatformPointer
      cst_encode_Auto_Ref_RustOpaque_stdsyncRwLockcrateapiDownloadProgress(
          DownloadProgress raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_stdsyncRwLockcrateapiDownloadProgress(
      DownloadProgress raw);

  @protected
  int cst_encode_account_storage_key(AccountStorageKey raw);

  @protected
  bool cst_encode_bool(bool raw);

  @protected
  double cst_encode_f_64(double raw);

  @protected
  int cst_encode_i_32(int raw);

  @protected
  int cst_encode_login_flow_stage(LoginFlowStage raw);

  @protected
  int cst_encode_minecraft_skin_variant(MinecraftSkinVariant raw);

  @protected
  int cst_encode_mod_loader_type(ModLoaderType raw);

  @protected
  int cst_encode_u_32(int raw);

  @protected
  int cst_encode_u_8(int raw);

  @protected
  int cst_encode_ui_layout_key(UILayoutKey raw);

  @protected
  void cst_encode_unit(void raw);

  @protected
  int cst_encode_usize(int raw);

  @protected
  int cst_encode_version_type(VersionType raw);

  @protected
  int cst_encode_xsts_token_error_type(XstsTokenErrorType raw);

  @protected
  void sse_encode_AnyhowException(
      AnyhowException self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_Ref_RustOpaque_stdsyncRwLockcrateapiDownloadProgress(
      DownloadProgress self, SseSerializer serializer);

  @protected
  void sse_encode_Chrono_Utc(DateTime self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_stdsyncRwLockcrateapiDownloadProgress(
      DownloadProgress self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_Uuid(UuidValue self, SseSerializer serializer);

  @protected
  void sse_encode_account_storage_key(
      AccountStorageKey self, SseSerializer serializer);

  @protected
  void sse_encode_account_storage_value(
      AccountStorageValue self, SseSerializer serializer);

  @protected
  void sse_encode_account_token(AccountToken self, SseSerializer serializer);

  @protected
  void sse_encode_advanced_options(
      AdvancedOptions self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_advanced_options(
      AdvancedOptions self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_login_flow_device_code(
      LoginFlowDeviceCode self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_login_flow_errors(
      LoginFlowErrors self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_minecraft_account(
      MinecraftAccount self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_minecraft_skin(
      MinecraftSkin self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_mod_loader(
      ModLoader self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_ui_layout_value(
      UILayoutValue self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_usize(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_version_metadata(
      VersionMetadata self, SseSerializer serializer);

  @protected
  void sse_encode_collection_id(CollectionId self, SseSerializer serializer);

  @protected
  void sse_encode_f_64(double self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_list_minecraft_account(
      List<MinecraftAccount> self, SseSerializer serializer);

  @protected
  void sse_encode_list_minecraft_cape(
      List<MinecraftCape> self, SseSerializer serializer);

  @protected
  void sse_encode_list_minecraft_skin(
      List<MinecraftSkin> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8(Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_collection_id_progress(
      List<(CollectionId, Progress)> self, SseSerializer serializer);

  @protected
  void sse_encode_login_flow_device_code(
      LoginFlowDeviceCode self, SseSerializer serializer);

  @protected
  void sse_encode_login_flow_errors(
      LoginFlowErrors self, SseSerializer serializer);

  @protected
  void sse_encode_login_flow_event(
      LoginFlowEvent self, SseSerializer serializer);

  @protected
  void sse_encode_login_flow_stage(
      LoginFlowStage self, SseSerializer serializer);

  @protected
  void sse_encode_minecraft_account(
      MinecraftAccount self, SseSerializer serializer);

  @protected
  void sse_encode_minecraft_cape(MinecraftCape self, SseSerializer serializer);

  @protected
  void sse_encode_minecraft_skin(MinecraftSkin self, SseSerializer serializer);

  @protected
  void sse_encode_minecraft_skin_variant(
      MinecraftSkinVariant self, SseSerializer serializer);

  @protected
  void sse_encode_mod_loader(ModLoader self, SseSerializer serializer);

  @protected
  void sse_encode_mod_loader_type(ModLoaderType self, SseSerializer serializer);

  @protected
  void sse_encode_opt_Uuid(UuidValue? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_advanced_options(
      AdvancedOptions? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_mod_loader(
      ModLoader? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_usize(int? self, SseSerializer serializer);

  @protected
  void sse_encode_progress(Progress self, SseSerializer serializer);

  @protected
  void sse_encode_record_collection_id_progress(
      (CollectionId, Progress) self, SseSerializer serializer);

  @protected
  void sse_encode_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_ui_layout_key(UILayoutKey self, SseSerializer serializer);

  @protected
  void sse_encode_ui_layout_value(UILayoutValue self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_usize(int self, SseSerializer serializer);

  @protected
  void sse_encode_version_metadata(
      VersionMetadata self, SseSerializer serializer);

  @protected
  void sse_encode_version_type(VersionType self, SseSerializer serializer);

  @protected
  void sse_encode_xsts_token_error_type(
      XstsTokenErrorType self, SseSerializer serializer);
}

// Section: wire_class

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names
// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint

/// generated by flutter_rust_bridge
class RustLibWire implements BaseWire {
  factory RustLibWire.fromExternalLibrary(ExternalLibrary lib) =>
      RustLibWire(lib.ffiDynamicLibrary);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  RustLibWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  RustLibWire.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void dart_fn_deliver_output(
    int call_id,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _dart_fn_deliver_output(
      call_id,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _dart_fn_deliver_outputPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int32, ffi.Pointer<ffi.Uint8>, ffi.Int32,
              ffi.Int32)>>('dart_fn_deliver_output');
  late final _dart_fn_deliver_output = _dart_fn_deliver_outputPtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_DownloadProgress_get_p(
    int port_,
    ffi.Pointer<ffi.Void> that,
  ) {
    return _wire_DownloadProgress_get_p(
      port_,
      that,
    );
  }

  late final _wire_DownloadProgress_get_pPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'wire_DownloadProgress_get_p');
  late final _wire_DownloadProgress_get_p = _wire_DownloadProgress_get_pPtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_create_collection(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> display_name,
    ffi.Pointer<wire_cst_version_metadata> version_metadata,
    ffi.Pointer<wire_cst_mod_loader> mod_loader,
    ffi.Pointer<wire_cst_advanced_options> advanced_options,
  ) {
    return _wire_create_collection(
      port_,
      display_name,
      version_metadata,
      mod_loader,
      advanced_options,
    );
  }

  late final _wire_create_collectionPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8>,
                  ffi.Pointer<wire_cst_version_metadata>,
                  ffi.Pointer<wire_cst_mod_loader>,
                  ffi.Pointer<wire_cst_advanced_options>)>>(
      'wire_create_collection');
  late final _wire_create_collection = _wire_create_collectionPtr.asFunction<
      void Function(
          int,
          ffi.Pointer<wire_cst_list_prim_u_8>,
          ffi.Pointer<wire_cst_version_metadata>,
          ffi.Pointer<wire_cst_mod_loader>,
          ffi.Pointer<wire_cst_advanced_options>)>();

  WireSyncRust2DartDco wire_get_account_storage(
    int key,
  ) {
    return _wire_get_account_storage(
      key,
    );
  }

  late final _wire_get_account_storagePtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
          'wire_get_account_storage');
  late final _wire_get_account_storage = _wire_get_account_storagePtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_get_skin_file_path(
    ffi.Pointer<wire_cst_minecraft_skin> skin,
  ) {
    return _wire_get_skin_file_path(
      skin,
    );
  }

  late final _wire_get_skin_file_pathPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_minecraft_skin>)>>(
      'wire_get_skin_file_path');
  late final _wire_get_skin_file_path = _wire_get_skin_file_pathPtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_minecraft_skin>)>();

  WireSyncRust2DartDco wire_get_ui_layout_storage(
    int key,
  ) {
    return _wire_get_ui_layout_storage(
      key,
    );
  }

  late final _wire_get_ui_layout_storagePtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
          'wire_get_ui_layout_storage');
  late final _wire_get_ui_layout_storage = _wire_get_ui_layout_storagePtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  void wire_get_v(
    int port_,
  ) {
    return _wire_get_v(
      port_,
    );
  }

  late final _wire_get_vPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>('wire_get_v');
  late final _wire_get_v = _wire_get_vPtr.asFunction<void Function(int)>();

  void wire_minecraft_login_flow(
    int port_,
  ) {
    return _wire_minecraft_login_flow(
      port_,
    );
  }

  late final _wire_minecraft_login_flowPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'wire_minecraft_login_flow');
  late final _wire_minecraft_login_flow =
      _wire_minecraft_login_flowPtr.asFunction<void Function(int)>();

  void wire_remove_minecraft_account(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> uuid,
  ) {
    return _wire_remove_minecraft_account(
      port_,
      uuid,
    );
  }

  late final _wire_remove_minecraft_accountPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'wire_remove_minecraft_account');
  late final _wire_remove_minecraft_account = _wire_remove_minecraft_accountPtr
      .asFunction<void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_set_ui_layout_storage(
    int port_,
    ffi.Pointer<wire_cst_ui_layout_value> value,
  ) {
    return _wire_set_ui_layout_storage(
      port_,
      value,
    );
  }

  late final _wire_set_ui_layout_storagePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_ui_layout_value>)>>(
      'wire_set_ui_layout_storage');
  late final _wire_set_ui_layout_storage = _wire_set_ui_layout_storagePtr
      .asFunction<void Function(int, ffi.Pointer<wire_cst_ui_layout_value>)>();

  void wire_setup_logger(
    int port_,
  ) {
    return _wire_setup_logger(
      port_,
    );
  }

  late final _wire_setup_loggerPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'wire_setup_logger');
  late final _wire_setup_logger =
      _wire_setup_loggerPtr.asFunction<void Function(int)>();

  void
      rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockcrateapiDownloadProgress(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockcrateapiDownloadProgress(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockcrateapiDownloadProgressPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockcrateapiDownloadProgress');
  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockcrateapiDownloadProgress =
      _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockcrateapiDownloadProgressPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockcrateapiDownloadProgress(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockcrateapiDownloadProgress(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockcrateapiDownloadProgressPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockcrateapiDownloadProgress');
  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockcrateapiDownloadProgress =
      _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockcrateapiDownloadProgressPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<wire_cst_advanced_options>
      cst_new_box_autoadd_advanced_options() {
    return _cst_new_box_autoadd_advanced_options();
  }

  late final _cst_new_box_autoadd_advanced_optionsPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_advanced_options> Function()>>(
      'cst_new_box_autoadd_advanced_options');
  late final _cst_new_box_autoadd_advanced_options =
      _cst_new_box_autoadd_advanced_optionsPtr
          .asFunction<ffi.Pointer<wire_cst_advanced_options> Function()>();

  ffi.Pointer<wire_cst_login_flow_device_code>
      cst_new_box_autoadd_login_flow_device_code() {
    return _cst_new_box_autoadd_login_flow_device_code();
  }

  late final _cst_new_box_autoadd_login_flow_device_codePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_login_flow_device_code>
              Function()>>('cst_new_box_autoadd_login_flow_device_code');
  late final _cst_new_box_autoadd_login_flow_device_code =
      _cst_new_box_autoadd_login_flow_device_codePtr.asFunction<
          ffi.Pointer<wire_cst_login_flow_device_code> Function()>();

  ffi.Pointer<wire_cst_login_flow_errors>
      cst_new_box_autoadd_login_flow_errors() {
    return _cst_new_box_autoadd_login_flow_errors();
  }

  late final _cst_new_box_autoadd_login_flow_errorsPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_login_flow_errors> Function()>>(
      'cst_new_box_autoadd_login_flow_errors');
  late final _cst_new_box_autoadd_login_flow_errors =
      _cst_new_box_autoadd_login_flow_errorsPtr
          .asFunction<ffi.Pointer<wire_cst_login_flow_errors> Function()>();

  ffi.Pointer<wire_cst_minecraft_account>
      cst_new_box_autoadd_minecraft_account() {
    return _cst_new_box_autoadd_minecraft_account();
  }

  late final _cst_new_box_autoadd_minecraft_accountPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_minecraft_account> Function()>>(
      'cst_new_box_autoadd_minecraft_account');
  late final _cst_new_box_autoadd_minecraft_account =
      _cst_new_box_autoadd_minecraft_accountPtr
          .asFunction<ffi.Pointer<wire_cst_minecraft_account> Function()>();

  ffi.Pointer<wire_cst_minecraft_skin> cst_new_box_autoadd_minecraft_skin() {
    return _cst_new_box_autoadd_minecraft_skin();
  }

  late final _cst_new_box_autoadd_minecraft_skinPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_minecraft_skin> Function()>>(
      'cst_new_box_autoadd_minecraft_skin');
  late final _cst_new_box_autoadd_minecraft_skin =
      _cst_new_box_autoadd_minecraft_skinPtr
          .asFunction<ffi.Pointer<wire_cst_minecraft_skin> Function()>();

  ffi.Pointer<wire_cst_mod_loader> cst_new_box_autoadd_mod_loader() {
    return _cst_new_box_autoadd_mod_loader();
  }

  late final _cst_new_box_autoadd_mod_loaderPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_mod_loader> Function()>>(
          'cst_new_box_autoadd_mod_loader');
  late final _cst_new_box_autoadd_mod_loader =
      _cst_new_box_autoadd_mod_loaderPtr
          .asFunction<ffi.Pointer<wire_cst_mod_loader> Function()>();

  ffi.Pointer<wire_cst_ui_layout_value> cst_new_box_autoadd_ui_layout_value() {
    return _cst_new_box_autoadd_ui_layout_value();
  }

  late final _cst_new_box_autoadd_ui_layout_valuePtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_ui_layout_value> Function()>>(
      'cst_new_box_autoadd_ui_layout_value');
  late final _cst_new_box_autoadd_ui_layout_value =
      _cst_new_box_autoadd_ui_layout_valuePtr
          .asFunction<ffi.Pointer<wire_cst_ui_layout_value> Function()>();

  ffi.Pointer<ffi.UintPtr> cst_new_box_autoadd_usize(
    int value,
  ) {
    return _cst_new_box_autoadd_usize(
      value,
    );
  }

  late final _cst_new_box_autoadd_usizePtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<ffi.UintPtr> Function(ffi.UintPtr)>>(
      'cst_new_box_autoadd_usize');
  late final _cst_new_box_autoadd_usize = _cst_new_box_autoadd_usizePtr
      .asFunction<ffi.Pointer<ffi.UintPtr> Function(int)>();

  ffi.Pointer<wire_cst_version_metadata>
      cst_new_box_autoadd_version_metadata() {
    return _cst_new_box_autoadd_version_metadata();
  }

  late final _cst_new_box_autoadd_version_metadataPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_version_metadata> Function()>>(
      'cst_new_box_autoadd_version_metadata');
  late final _cst_new_box_autoadd_version_metadata =
      _cst_new_box_autoadd_version_metadataPtr
          .asFunction<ffi.Pointer<wire_cst_version_metadata> Function()>();

  ffi.Pointer<wire_cst_list_minecraft_account> cst_new_list_minecraft_account(
    int len,
  ) {
    return _cst_new_list_minecraft_account(
      len,
    );
  }

  late final _cst_new_list_minecraft_accountPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_minecraft_account> Function(
              ffi.Int32)>>('cst_new_list_minecraft_account');
  late final _cst_new_list_minecraft_account =
      _cst_new_list_minecraft_accountPtr.asFunction<
          ffi.Pointer<wire_cst_list_minecraft_account> Function(int)>();

  ffi.Pointer<wire_cst_list_minecraft_cape> cst_new_list_minecraft_cape(
    int len,
  ) {
    return _cst_new_list_minecraft_cape(
      len,
    );
  }

  late final _cst_new_list_minecraft_capePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_minecraft_cape> Function(
              ffi.Int32)>>('cst_new_list_minecraft_cape');
  late final _cst_new_list_minecraft_cape = _cst_new_list_minecraft_capePtr
      .asFunction<ffi.Pointer<wire_cst_list_minecraft_cape> Function(int)>();

  ffi.Pointer<wire_cst_list_minecraft_skin> cst_new_list_minecraft_skin(
    int len,
  ) {
    return _cst_new_list_minecraft_skin(
      len,
    );
  }

  late final _cst_new_list_minecraft_skinPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_minecraft_skin> Function(
              ffi.Int32)>>('cst_new_list_minecraft_skin');
  late final _cst_new_list_minecraft_skin = _cst_new_list_minecraft_skinPtr
      .asFunction<ffi.Pointer<wire_cst_list_minecraft_skin> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_u_8> cst_new_list_prim_u_8(
    int len,
  ) {
    return _cst_new_list_prim_u_8(
      len,
    );
  }

  late final _cst_new_list_prim_u_8Ptr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_prim_u_8> Function(
              ffi.Int32)>>('cst_new_list_prim_u_8');
  late final _cst_new_list_prim_u_8 = _cst_new_list_prim_u_8Ptr
      .asFunction<ffi.Pointer<wire_cst_list_prim_u_8> Function(int)>();

  ffi.Pointer<wire_cst_list_record_collection_id_progress>
      cst_new_list_record_collection_id_progress(
    int len,
  ) {
    return _cst_new_list_record_collection_id_progress(
      len,
    );
  }

  late final _cst_new_list_record_collection_id_progressPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_record_collection_id_progress> Function(
              ffi.Int32)>>('cst_new_list_record_collection_id_progress');
  late final _cst_new_list_record_collection_id_progress =
      _cst_new_list_record_collection_id_progressPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_collection_id_progress> Function(
              int)>();

  ffi.Pointer<AccountStorageValueKind>
      cst_inflate_AccountStorageValue_Accounts() {
    return _cst_inflate_AccountStorageValue_Accounts();
  }

  late final _cst_inflate_AccountStorageValue_AccountsPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<AccountStorageValueKind> Function()>>(
      'cst_inflate_AccountStorageValue_Accounts');
  late final _cst_inflate_AccountStorageValue_Accounts =
      _cst_inflate_AccountStorageValue_AccountsPtr
          .asFunction<ffi.Pointer<AccountStorageValueKind> Function()>();

  ffi.Pointer<AccountStorageValueKind>
      cst_inflate_AccountStorageValue_MainAccount() {
    return _cst_inflate_AccountStorageValue_MainAccount();
  }

  late final _cst_inflate_AccountStorageValue_MainAccountPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<AccountStorageValueKind> Function()>>(
      'cst_inflate_AccountStorageValue_MainAccount');
  late final _cst_inflate_AccountStorageValue_MainAccount =
      _cst_inflate_AccountStorageValue_MainAccountPtr
          .asFunction<ffi.Pointer<AccountStorageValueKind> Function()>();

  ffi.Pointer<LoginFlowErrorsKind> cst_inflate_LoginFlowErrors_XstsError() {
    return _cst_inflate_LoginFlowErrors_XstsError();
  }

  late final _cst_inflate_LoginFlowErrors_XstsErrorPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<LoginFlowErrorsKind> Function()>>(
          'cst_inflate_LoginFlowErrors_XstsError');
  late final _cst_inflate_LoginFlowErrors_XstsError =
      _cst_inflate_LoginFlowErrors_XstsErrorPtr
          .asFunction<ffi.Pointer<LoginFlowErrorsKind> Function()>();

  ffi.Pointer<LoginFlowErrorsKind> cst_inflate_LoginFlowErrors_UnknownError() {
    return _cst_inflate_LoginFlowErrors_UnknownError();
  }

  late final _cst_inflate_LoginFlowErrors_UnknownErrorPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<LoginFlowErrorsKind> Function()>>(
          'cst_inflate_LoginFlowErrors_UnknownError');
  late final _cst_inflate_LoginFlowErrors_UnknownError =
      _cst_inflate_LoginFlowErrors_UnknownErrorPtr
          .asFunction<ffi.Pointer<LoginFlowErrorsKind> Function()>();

  ffi.Pointer<LoginFlowEventKind> cst_inflate_LoginFlowEvent_Stage() {
    return _cst_inflate_LoginFlowEvent_Stage();
  }

  late final _cst_inflate_LoginFlowEvent_StagePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<LoginFlowEventKind> Function()>>(
          'cst_inflate_LoginFlowEvent_Stage');
  late final _cst_inflate_LoginFlowEvent_Stage =
      _cst_inflate_LoginFlowEvent_StagePtr
          .asFunction<ffi.Pointer<LoginFlowEventKind> Function()>();

  ffi.Pointer<LoginFlowEventKind> cst_inflate_LoginFlowEvent_DeviceCode() {
    return _cst_inflate_LoginFlowEvent_DeviceCode();
  }

  late final _cst_inflate_LoginFlowEvent_DeviceCodePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<LoginFlowEventKind> Function()>>(
          'cst_inflate_LoginFlowEvent_DeviceCode');
  late final _cst_inflate_LoginFlowEvent_DeviceCode =
      _cst_inflate_LoginFlowEvent_DeviceCodePtr
          .asFunction<ffi.Pointer<LoginFlowEventKind> Function()>();

  ffi.Pointer<LoginFlowEventKind> cst_inflate_LoginFlowEvent_Error() {
    return _cst_inflate_LoginFlowEvent_Error();
  }

  late final _cst_inflate_LoginFlowEvent_ErrorPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<LoginFlowEventKind> Function()>>(
          'cst_inflate_LoginFlowEvent_Error');
  late final _cst_inflate_LoginFlowEvent_Error =
      _cst_inflate_LoginFlowEvent_ErrorPtr
          .asFunction<ffi.Pointer<LoginFlowEventKind> Function()>();

  ffi.Pointer<LoginFlowEventKind> cst_inflate_LoginFlowEvent_Success() {
    return _cst_inflate_LoginFlowEvent_Success();
  }

  late final _cst_inflate_LoginFlowEvent_SuccessPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<LoginFlowEventKind> Function()>>(
          'cst_inflate_LoginFlowEvent_Success');
  late final _cst_inflate_LoginFlowEvent_Success =
      _cst_inflate_LoginFlowEvent_SuccessPtr
          .asFunction<ffi.Pointer<LoginFlowEventKind> Function()>();

  ffi.Pointer<UILayoutValueKind> cst_inflate_UILayoutValue_CompletedSetup() {
    return _cst_inflate_UILayoutValue_CompletedSetup();
  }

  late final _cst_inflate_UILayoutValue_CompletedSetupPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<UILayoutValueKind> Function()>>(
          'cst_inflate_UILayoutValue_CompletedSetup');
  late final _cst_inflate_UILayoutValue_CompletedSetup =
      _cst_inflate_UILayoutValue_CompletedSetupPtr
          .asFunction<ffi.Pointer<UILayoutValueKind> Function()>();

  int dummy_method_to_enforce_bundling() {
    return _dummy_method_to_enforce_bundling();
  }

  late final _dummy_method_to_enforce_bundlingPtr =
      _lookup<ffi.NativeFunction<ffi.Int64 Function()>>(
          'dummy_method_to_enforce_bundling');
  late final _dummy_method_to_enforce_bundling =
      _dummy_method_to_enforce_bundlingPtr.asFunction<int Function()>();
}

final class wire_cst_list_prim_u_8 extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_version_metadata extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> id;

  @ffi.Int32()
  external int version_type;

  external ffi.Pointer<wire_cst_list_prim_u_8> url;

  @ffi.Int64()
  external int uploaded_time;

  @ffi.Int64()
  external int release_time;

  external ffi.Pointer<wire_cst_list_prim_u_8> sha1;

  @ffi.Uint32()
  external int compliance_level;
}

final class wire_cst_mod_loader extends ffi.Struct {
  @ffi.Int32()
  external int mod_loader_type;

  external ffi.Pointer<wire_cst_list_prim_u_8> version;
}

final class wire_cst_advanced_options extends ffi.Struct {
  external ffi.Pointer<ffi.UintPtr> jvm_max_memory;
}

final class wire_cst_minecraft_skin extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> id;

  external ffi.Pointer<wire_cst_list_prim_u_8> state;

  external ffi.Pointer<wire_cst_list_prim_u_8> url;

  @ffi.Int32()
  external int variant;
}

final class wire_cst_UILayoutValue_CompletedSetup extends ffi.Struct {
  @ffi.Bool()
  external bool field0;
}

final class UILayoutValueKind extends ffi.Union {
  external ffi.Pointer<wire_cst_UILayoutValue_CompletedSetup> CompletedSetup;
}

final class wire_cst_ui_layout_value extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external ffi.Pointer<UILayoutValueKind> kind;
}

final class wire_cst_login_flow_device_code extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> verification_uri;

  external ffi.Pointer<wire_cst_list_prim_u_8> user_code;
}

final class wire_cst_LoginFlowErrors_XstsError extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_LoginFlowErrors_GameNotOwned extends ffi.Opaque {}

final class wire_cst_LoginFlowErrors_UnknownError extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class LoginFlowErrorsKind extends ffi.Union {
  external ffi.Pointer<wire_cst_LoginFlowErrors_XstsError> XstsError;

  external ffi.Pointer<wire_cst_LoginFlowErrors_GameNotOwned> GameNotOwned;

  external ffi.Pointer<wire_cst_LoginFlowErrors_UnknownError> UnknownError;
}

final class wire_cst_login_flow_errors extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external ffi.Pointer<LoginFlowErrorsKind> kind;
}

final class wire_cst_account_token extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> token;

  @ffi.Int64()
  external int expires_at;
}

final class wire_cst_list_minecraft_skin extends ffi.Struct {
  external ffi.Pointer<wire_cst_minecraft_skin> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_minecraft_cape extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> id;

  external ffi.Pointer<wire_cst_list_prim_u_8> state;

  external ffi.Pointer<wire_cst_list_prim_u_8> url;

  external ffi.Pointer<wire_cst_list_prim_u_8> alias;
}

final class wire_cst_list_minecraft_cape extends ffi.Struct {
  external ffi.Pointer<wire_cst_minecraft_cape> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_minecraft_account extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> username;

  external ffi.Pointer<wire_cst_list_prim_u_8> uuid;

  external wire_cst_account_token access_token;

  external wire_cst_account_token refresh_token;

  external ffi.Pointer<wire_cst_list_minecraft_skin> skins;

  external ffi.Pointer<wire_cst_list_minecraft_cape> capes;
}

final class wire_cst_list_minecraft_account extends ffi.Struct {
  external ffi.Pointer<wire_cst_minecraft_account> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_collection_id extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_progress extends ffi.Struct {
  @ffi.Double()
  external double speed;

  @ffi.Double()
  external double percentages;

  @ffi.Double()
  external double current_size;

  @ffi.Double()
  external double total_size;
}

final class wire_cst_record_collection_id_progress extends ffi.Struct {
  external wire_cst_collection_id field0;

  external wire_cst_progress field1;
}

final class wire_cst_list_record_collection_id_progress extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_collection_id_progress> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_AccountStorageValue_Accounts extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_minecraft_account> field0;
}

final class wire_cst_AccountStorageValue_MainAccount extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class AccountStorageValueKind extends ffi.Union {
  external ffi.Pointer<wire_cst_AccountStorageValue_Accounts> Accounts;

  external ffi.Pointer<wire_cst_AccountStorageValue_MainAccount> MainAccount;
}

final class wire_cst_LoginFlowEvent_Stage extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_LoginFlowEvent_DeviceCode extends ffi.Struct {
  external ffi.Pointer<wire_cst_login_flow_device_code> field0;
}

final class wire_cst_LoginFlowEvent_Error extends ffi.Struct {
  external ffi.Pointer<wire_cst_login_flow_errors> field0;
}

final class wire_cst_LoginFlowEvent_Success extends ffi.Struct {
  external ffi.Pointer<wire_cst_minecraft_account> field0;
}

final class LoginFlowEventKind extends ffi.Union {
  external ffi.Pointer<wire_cst_LoginFlowEvent_Stage> Stage;

  external ffi.Pointer<wire_cst_LoginFlowEvent_DeviceCode> DeviceCode;

  external ffi.Pointer<wire_cst_LoginFlowEvent_Error> Error;

  external ffi.Pointer<wire_cst_LoginFlowEvent_Success> Success;
}

final class wire_cst_account_storage_value extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external ffi.Pointer<AccountStorageValueKind> kind;
}

final class wire_cst_login_flow_event extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external ffi.Pointer<LoginFlowEventKind> kind;
}
